'use strict';

// Сейчас мы сделаем сайт, который будет помогать определить значение HTML тега. Пусть в этом скрипте будет инпут, в который пользователь будет вводить имя тега. После этого по нажатию на Enter под инпутом пусть выдается описание этого тега.
// №1 ⊗jsPrStTS
// Продумайте, как удобнее всего хранить имена тегов и их описания в соответствии с поставленной задачей.
// №2 ⊗jsPrStTS
// Реализуйте описанный сайт.

const input = document.querySelector('#input');
const btn = document.querySelector('#btn');
const descr = document.querySelector('.description');

const desrOfTags = {
    'html': 'Является корневым элементом документа. Все остальные элементы содержатся внутри тегов <html>...</html>. Все, что находится за пределами тегов, не воспринимается браузером как код HTML и никак им не обрабатывается. Для элемента доступны атрибуты manifest и xmlns, а также глобальные атрибуты.',
    'head': 'Раздел <head>...</head> содержит техническую информацию о странице: заголовок, описание, ключевые слова для поисковых машин, кодировку и т.д. Введенная в нем информация не отображается в окне браузера, однако содержит данные, которые указывают браузеру, как следует обрабатывать страницу.',
    'title': 'Обязательным тегом раздела <head> является тег <title>. Текст, размещенный внутри этого тега, отображается в строке заголовка веб-браузера. Длина заголовка должна быть не более 60 символов, чтобы полностью поместиться в заголовке. Текст заголовка должен содержать максимально полное описание содержимого веб-страницы.',
    'meta': 'Необязательным тегом раздела <head> является одинарный тег <meta>. С его помощью можно задать описание содержимого страницы и ключевые слова для поисковых машин, автора HTML-документа и прочие свойства метаданных. Элемент <head> может содержать несколько элементов <meta>, потому что в зависимости от используемых атрибутов они несут различную информацию.',
    'style': 'Внутри этого элемента задаются стили, которые используются на странице. Для задания стилей в HTML-документе используется язык CSS. Таких элементов на странице может быть несколько.',
    'link': 'Задать стили для документа можно также при помощи другого способа — записать их в отдельный файл с расширением .css, например, style.css.',
    'script': 'Элемент <script> позволяет присоединять к документу различные сценарии. Закрывающий тег обязателен, при этом текст сценария может располагаться либо внутри этого элемента, либо во внешнем файле. Если текст сценария расположен во внешнем файле, то он подключается с помощью атрибутов элемента.',
    'p': 'Создает новый параграф',
    'a': 'Создает гиперссылку на другие документы или часть текущего документа'
};

const keys = Object.keys(desrOfTags);

btn.addEventListener('click', function() {
    let search = input.value.trim();
    if(search !== '') {
        keys.forEach(key => {
            keys.includes(search) ? descr.textContent = desrOfTags[search] : descr.textContent = 'Введено неверное имя тега. Введите имя тега правильно!';
        });
    } else {
        descr.textContent = 'Введите название тега';
    }
});